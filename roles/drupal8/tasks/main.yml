---

- name: Install Drush.
  get_url:
    url: "{{ drush_phar_url }}"
    dest: /usr/local/bin/drush

- name: Ensure Drush is executable.
  file:
    path: /usr/local/bin/drush
    mode: 0755

- name: Install Composer
  get_url:
    url: "{{ composer_phar_url }}"
    dest: /usr/local/bin/composer

- name: Ensure Composer is executable.
  file:
    path: /usr/local/bin/composer
    mode: 0755

- name: Create druapl home
  file:
    path: "{{ drupal_docroot }}"
    state: directory
    recurse: yes
    owner: "{{ drupal_system_user }}"
    group: "{{ drupal_system_user }}"
    mode: 0755

- name: Drupal | Check if site is already installed
  command: >
    drush status --root={{ drupal_docroot }}
  register: drush_status

- name: Drupal | Get the drupal stable version(8)
  git:
    repo: "https://github.com/drupal/drupal.git"
    version: "{{ drupal_version_branch }}"
    dest: "{{ drupal_docroot }}"
    depth: 1
  when: not drush_status.stdout | search("Drupal bootstrap\s+:\s+Successful")

- name: Drupal | Run composer
  composer:
    command: install
    working_dir: "{{ drupal_docroot }}"
  when: not drush_status.stdout | search("Drupal bootstrap\s+:\s+Successful")

- name: Configure MySQL user for drupal,full access to create database
  mysql_user: name={{ drupal_db.user }} password={{ drupal_db.password }} priv=*.*:ALL host={{ item }} state=present
  with_items:
          - 127.0.0.1
          - localhost

- name: Drupal | Give appropriate permissions for files directory
  file:
    dest: "{{ drupal_docroot }}"
    recurse: yes
    owner: "{{ drupal_system_user }}"
    group: "{{ drupal_system_user }}"
  when: not drush_status.stdout | search("Drupal bootstrap\s+:\s+Successful")

- name: Drupal | Drush site install if not already installed
  command: >
    drush site-install standard -y
    --site-name="{{ drupal_site_name }}"
    --account-name={{ drupal_account_name }}
    --account-pass={{ drupal_account_pass }}
    --db-url=mysql://{{ drupal_db.user }}:{{ drupal_db.password }}@localhost/{{ drupal_db.name }}
    -r {{ drupal_docroot }}

  when: not drush_status.stdout | search("Drupal bootstrap\s+:\s+Successful")
  notify: restart nginx

- name: Configure MySQL user for drupal,revoke full access
  mysql_user: name={{ drupal_db.user }} password={{ drupal_db.password }} priv=*.*:USAGE host={{ item }} state=present
  with_items:
          - 127.0.0.1
          - localhost

- name: Configure MySQL user for drupal,restrict access to drupal db
  mysql_user: name={{ drupal_db.user }} password={{ drupal_db.password }} priv={{ drupal_db.name }}.*:ALL host={{ item }} state=present
  with_items:
          - 127.0.0.1
          - localhost
